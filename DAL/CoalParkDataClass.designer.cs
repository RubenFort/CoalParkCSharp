#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CoalPark")]
	public partial class CoalParkDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDRIVER(DRIVER instance);
    partial void UpdateDRIVER(DRIVER instance);
    partial void DeleteDRIVER(DRIVER instance);
    partial void InsertTRUCK(TRUCK instance);
    partial void UpdateTRUCK(TRUCK instance);
    partial void DeleteTRUCK(TRUCK instance);
    partial void InsertENTRIES(ENTRIES instance);
    partial void UpdateENTRIES(ENTRIES instance);
    partial void DeleteENTRIES(ENTRIES instance);
    #endregion
		
		public CoalParkDataClassDataContext() : 
				base(global::DAL.Properties.Settings.Default.CoalParkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CoalParkDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoalParkDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoalParkDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoalParkDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DRIVER> DRIVER
		{
			get
			{
				return this.GetTable<DRIVER>();
			}
		}
		
		public System.Data.Linq.Table<TRUCK> TRUCK
		{
			get
			{
				return this.GetTable<TRUCK>();
			}
		}
		
		public System.Data.Linq.Table<ENTRIES> ENTRIES
		{
			get
			{
				return this.GetTable<ENTRIES>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DRIVER")]
	public partial class DRIVER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserNo;
		
		private string _Name;
		
		private string _SurName;
		
		private string _ImagePath;
		
		private System.DateTime _BirthDay;
		
		private string _CompanyID;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNoChanging(int value);
    partial void OnUserNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnBirthDayChanging(System.DateTime value);
    partial void OnBirthDayChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public DRIVER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Int NOT NULL")]
		public int UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this.OnUserNoChanging(value);
					this.SendPropertyChanging();
					this._UserNo = value;
					this.SendPropertyChanged("UserNo");
					this.OnUserNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="Date NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRUCK")]
	public partial class TRUCK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TruckID;
		
		private string _Plate;
		
		private int _CompanyID;
		
		private bool _AllowedEntry;
		
		private string _Brand;
		
		private System.Nullable<int> _DriverID;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTruckIDChanging(int value);
    partial void OnTruckIDChanged();
    partial void OnPlateChanging(string value);
    partial void OnPlateChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnAllowedEntryChanging(bool value);
    partial void OnAllowedEntryChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnDriverIDChanging(System.Nullable<int> value);
    partial void OnDriverIDChanged();
    #endregion
		
		public TRUCK()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckID", DbType="Int NOT NULL")]
		public int TruckID
		{
			get
			{
				return this._TruckID;
			}
			set
			{
				if ((this._TruckID != value))
				{
					this.OnTruckIDChanging(value);
					this.SendPropertyChanging();
					this._TruckID = value;
					this.SendPropertyChanged("TruckID");
					this.OnTruckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Plate
		{
			get
			{
				return this._Plate;
			}
			set
			{
				if ((this._Plate != value))
				{
					this.OnPlateChanging(value);
					this.SendPropertyChanging();
					this._Plate = value;
					this.SendPropertyChanged("Plate");
					this.OnPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedEntry", DbType="Bit NOT NULL")]
		public bool AllowedEntry
		{
			get
			{
				return this._AllowedEntry;
			}
			set
			{
				if ((this._AllowedEntry != value))
				{
					this.OnAllowedEntryChanging(value);
					this.SendPropertyChanging();
					this._AllowedEntry = value;
					this.SendPropertyChanged("AllowedEntry");
					this.OnAllowedEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", DbType="Int")]
		public System.Nullable<int> DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENTRIES")]
	public partial class ENTRIES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TuckID;
		
		private System.Nullable<System.DateTime> _EntryDate;
		
		private System.Nullable<System.DateTime> _ExitDate;
		
		private double _Weight_Kg_;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTuckIDChanging(int value);
    partial void OnTuckIDChanged();
    partial void OnEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDateChanged();
    partial void OnExitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExitDateChanged();
    partial void OnWeight_Kg_Changing(double value);
    partial void OnWeight_Kg_Changed();
    #endregion
		
		public ENTRIES()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TuckID", DbType="Int NOT NULL")]
		public int TuckID
		{
			get
			{
				return this._TuckID;
			}
			set
			{
				if ((this._TuckID != value))
				{
					this.OnTuckIDChanging(value);
					this.SendPropertyChanging();
					this._TuckID = value;
					this.SendPropertyChanged("TuckID");
					this.OnTuckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExitDate
		{
			get
			{
				return this._ExitDate;
			}
			set
			{
				if ((this._ExitDate != value))
				{
					this.OnExitDateChanging(value);
					this.SendPropertyChanging();
					this._ExitDate = value;
					this.SendPropertyChanged("ExitDate");
					this.OnExitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Weight(Kg)]", Storage="_Weight_Kg_", DbType="Float NOT NULL")]
		public double Weight_Kg_
		{
			get
			{
				return this._Weight_Kg_;
			}
			set
			{
				if ((this._Weight_Kg_ != value))
				{
					this.OnWeight_Kg_Changing(value);
					this.SendPropertyChanging();
					this._Weight_Kg_ = value;
					this.SendPropertyChanged("Weight_Kg_");
					this.OnWeight_Kg_Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
